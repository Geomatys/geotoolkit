/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2014, Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 2.1 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.04.20 at 07:08:32 PM CEST
//


package org.geotoolkit.owc.xml.v10;

import java.math.BigInteger;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import org.w3._2005.atom.LinkType;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the net.opengis.owc._1 package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Display_QNAME = new QName("http://www.opengis.net/owc/1.0", "display");
    private final static QName _Offering_QNAME = new QName("http://www.opengis.net/owc/1.0", "offering");
    private final static QName _MinScaleDenominator_QNAME = new QName("http://www.opengis.net/owc/1.0", "minScaleDenominator");
    private final static QName _MaxScaleDenominator_QNAME = new QName("http://www.opengis.net/owc/1.0", "maxScaleDenominator");
    private final static QName _Forder_QNAME = new QName("http://www.opengis.net/owc/1.0", "forder");
    private final static QName _OperationTypeRequest_QNAME = new QName("http://www.opengis.net/owc/1.0", "request");
    private final static QName _OperationTypeResult_QNAME = new QName("http://www.opengis.net/owc/1.0", "result");
    private final static QName _OfferingTypeStyleSet_QNAME = new QName("http://www.opengis.net/owc/1.0", "styleSet");
    private final static QName _OfferingTypeContent_QNAME = new QName("http://www.opengis.net/owc/1.0", "content");
    private final static QName _OfferingTypeOperation_QNAME = new QName("http://www.opengis.net/owc/1.0", "operation");
    private final static QName _DisplayTypeMmPerPixel_QNAME = new QName("http://www.opengis.net/owc/1.0", "mmPerPixel");
    private final static QName _DisplayTypePixelWidth_QNAME = new QName("http://www.opengis.net/owc/1.0", "pixelWidth");
    private final static QName _DisplayTypePixelHeight_QNAME = new QName("http://www.opengis.net/owc/1.0", "pixelHeight");
    private final static QName _StyleSetTypeLegendURL_QNAME = new QName("http://www.opengis.net/owc/1.0", "legendURL");
    private final static QName _StyleSetTypeName_QNAME = new QName("http://www.opengis.net/owc/1.0", "name");
    private final static QName _StyleSetTypeAbstract_QNAME = new QName("http://www.opengis.net/owc/1.0", "abstract");
    private final static QName _StyleSetTypeTitle_QNAME = new QName("http://www.opengis.net/owc/1.0", "title");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.opengis.owc._1
     *
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DisplayType }
     *
     */
    public DisplayType createDisplayType() {
        return new DisplayType();
    }

    /**
     * Create an instance of {@link OfferingType }
     *
     */
    public OfferingType createOfferingType() {
        return new OfferingType();
    }

    /**
     * Create an instance of {@link StyleSetType }
     *
     */
    public StyleSetType createStyleSetType() {
        return new StyleSetType();
    }

    /**
     * Create an instance of {@link OperationType }
     *
     */
    public OperationType createOperationType() {
        return new OperationType();
    }

    /**
     * Create an instance of {@link ContentType }
     *
     */
    public ContentType createContentType() {
        return new ContentType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DisplayType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "display")
    public JAXBElement<DisplayType> createDisplay(DisplayType value) {
        return new JAXBElement<DisplayType>(_Display_QNAME, DisplayType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OfferingType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "offering")
    public JAXBElement<OfferingType> createOffering(OfferingType value) {
        return new JAXBElement<OfferingType>(_Offering_QNAME, OfferingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "minScaleDenominator")
    public JAXBElement<Double> createMinScaleDenominator(Double value) {
        return new JAXBElement<Double>(_MinScaleDenominator_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "maxScaleDenominator")
    public JAXBElement<Double> createMaxScaleDenominator(Double value) {
        return new JAXBElement<Double>(_MaxScaleDenominator_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "forder")
    public JAXBElement<String> createForder(String value) {
        return new JAXBElement<String>(_Forder_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "request", scope = OperationType.class)
    public JAXBElement<ContentType> createOperationTypeRequest(ContentType value) {
        return new JAXBElement<ContentType>(_OperationTypeRequest_QNAME, ContentType.class, OperationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "result", scope = OperationType.class)
    public JAXBElement<ContentType> createOperationTypeResult(ContentType value) {
        return new JAXBElement<ContentType>(_OperationTypeResult_QNAME, ContentType.class, OperationType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StyleSetType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "styleSet", scope = OfferingType.class)
    public JAXBElement<StyleSetType> createOfferingTypeStyleSet(StyleSetType value) {
        return new JAXBElement<StyleSetType>(_OfferingTypeStyleSet_QNAME, StyleSetType.class, OfferingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "content", scope = OfferingType.class)
    public JAXBElement<ContentType> createOfferingTypeContent(ContentType value) {
        return new JAXBElement<ContentType>(_OfferingTypeContent_QNAME, ContentType.class, OfferingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OperationType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "operation", scope = OfferingType.class)
    public JAXBElement<OperationType> createOfferingTypeOperation(OperationType value) {
        return new JAXBElement<OperationType>(_OfferingTypeOperation_QNAME, OperationType.class, OfferingType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "mmPerPixel", scope = DisplayType.class)
    public JAXBElement<Double> createDisplayTypeMmPerPixel(Double value) {
        return new JAXBElement<Double>(_DisplayTypeMmPerPixel_QNAME, Double.class, DisplayType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "pixelWidth", scope = DisplayType.class)
    public JAXBElement<BigInteger> createDisplayTypePixelWidth(BigInteger value) {
        return new JAXBElement<BigInteger>(_DisplayTypePixelWidth_QNAME, BigInteger.class, DisplayType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "pixelHeight", scope = DisplayType.class)
    public JAXBElement<BigInteger> createDisplayTypePixelHeight(BigInteger value) {
        return new JAXBElement<BigInteger>(_DisplayTypePixelHeight_QNAME, BigInteger.class, DisplayType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "legendURL", scope = StyleSetType.class)
    public JAXBElement<LinkType> createStyleSetTypeLegendURL(LinkType value) {
        return new JAXBElement<LinkType>(_StyleSetTypeLegendURL_QNAME, LinkType.class, StyleSetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "name", scope = StyleSetType.class)
    public JAXBElement<String> createStyleSetTypeName(String value) {
        return new JAXBElement<String>(_StyleSetTypeName_QNAME, String.class, StyleSetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentType }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "content", scope = StyleSetType.class)
    public JAXBElement<ContentType> createStyleSetTypeContent(ContentType value) {
        return new JAXBElement<ContentType>(_OfferingTypeContent_QNAME, ContentType.class, StyleSetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "abstract", scope = StyleSetType.class)
    public JAXBElement<String> createStyleSetTypeAbstract(String value) {
        return new JAXBElement<String>(_StyleSetTypeAbstract_QNAME, String.class, StyleSetType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "http://www.opengis.net/owc/1.0", name = "title", scope = StyleSetType.class)
    public JAXBElement<String> createStyleSetTypeTitle(String value) {
        return new JAXBElement<String>(_StyleSetTypeTitle_QNAME, String.class, StyleSetType.class, value);
    }

}
