# IMPORTANT notes:
# 1. Use a global maven cache to avoid downloading released dependencies everytime
# 2. sis-migration disabled (see comments in .gitlab/CI/build.yml file)
# 3. Release stage not ready yet. Only a manual maven artifact is available for now. More details about release work in
#    "TODO" comment in related file.
variables:
  MAVEN_LOCAL: ".m2_local"
  MAVEN_OPTS: "-Dmaven.repo.local=$MAVEN_LOCAL -Djava.awt.headless=true"
  SONAR_HOST_URL: "https://sonar.geomatys.com"
  DEPLOY_SERVER: "releases::https://nexus.geomatys.com/repository/releases/"

# Cache dependencies globally. Project snapshot are removed with below after script to avoid caching nightly artifact.
cache: &global_cache
  policy: pull
  key: GLOBAL_MVN_CACHE
  paths:
    - "$MAVEN_LOCAL"

stages:
  - build
  - quality
  - release

# Cannot use newer version of maven because we still need http repositories (Ex: http://jaspersoft.jfrog.io/jaspersoft)
image: maven:3.6.3-openjdk-16

# Force removing artifacts installed by local jobs, to avoid cache corruption with snapshots.
after_script:
  - mvn build-helper:remove-project-artifact > /dev/null && echo "Successfully removed project artifacts from cache"

build:
  # Mainly check project sanity by installing all components and running unit tests.
  # It also serve as main job for cache update.
  #
  # For now, disable it for sis-migration because:
  # 1. We would need to build GeoAPI / SIS beforehand
  # 2. We have to be careful with maven local repository caching, that would be polluted with GeoAPI and SIS snapshots
  # 3. Anyway, dependence upon unstable libraries is a bad idea. If not avoidable, we should use submodules to ease the maintainance
  except:
    refs:
      - sis-migration
  cache:
    <<: *global_cache
    policy: pull-push
  stage: build
  script:
    - mvn clean install -s $MAVEN_SETTINGS
#    - mvn javadoc:jar TODO: activate back to ensure API doc is valid. Maybe move to quality stage

include:
  - '.gitlab/CI/quality.yml'
  - '.gitlab/CI/release.yml'