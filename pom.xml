<?xml version="1.0" encoding="UTF-8"?>
<!-- =======================================================================
        Maven Project Configuration File

        The Geotoolkit.org Project
            http://www.geotoolkit.org/

        Profiles available in this build:

          - package         Also package source code.
          - sign-artifacts  Apply GPG signature on the JAR files.
     ======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>



  <!-- ====================================================
           Project description (including license).
       ==================================================== -->

  <parent>
    <groupId>com.geomatys</groupId>
    <artifactId>geomatys-bom</artifactId>
    <version>2023.2</version>
  </parent>

  <groupId>org.geotoolkit</groupId>
  <artifactId>geotoolkit</artifactId>
  <packaging>pom</packaging>
  <version>5.0-SNAPSHOT</version>
  <name>Geotoolkit.org</name>
  <url>http://www.geotoolkit.org/</url>

  <description>
    Geotoolkit.org (abridged Geotk) is a free software, Java language library for developing
    geospatial applications. The library can be used for desktop or server applications.
    The library is built on top of Apache SIS, and is used as a laboratory for the later:
    some features are first developed in Geotk, then the most stable parts are submitted
    to Apache SIS.
  </description>

  <organization>
    <name>Geotoolkit.org</name>
    <url>http://www.geotoolkit.org/</url>
  </organization>
  <inceptionYear>2009</inceptionYear>

  <licenses>
    <license>
      <name>Lesser General Public License (LGPL)</name>
      <url>http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>



  <!-- ===========================================================
           Issue managements and mailing lists.
       =========================================================== -->
  <scm>
    <connection>scm:git:https://github.com/Geomatys/geotoolkit.git</connection>
    <url>https://github.com/Geomatys/geotoolkit.git</url>
    <developerConnection>scm:git:https://github.com/Geomatys/geotoolkit.git</developerConnection>
  </scm>

  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.geotoolkit.org/</url>
  </issueManagement>

  <mailingLists>
    <mailingList>
      <name>geotoolkit</name>
      <subscribe>http://lists.osgeo.org/mailman/listinfo/geotoolkit</subscribe>
      <unsubscribe>http://lists.osgeo.org/mailman/listinfo/geotoolkit</unsubscribe>
      <post>geotoolkit@lists.osgeo.org</post>
      <archive>http://lists.osgeo.org/pipermail/geotoolkit</archive>
    </mailingList>
  </mailingLists>



  <!-- ===========================================================
           Developers and Contributors.
       =========================================================== -->
  <developers>
    <developer>
      <name>Johann Sorel</name>
      <id>eclesia</id>
      <email>johann.sorel@geomatys.com</email>
      <organization>Geomatys</organization>
      <organizationUrl>http://www.geomatys.fr/</organizationUrl>
      <timezone>+1</timezone>
      <roles>
        <role>Administrator</role>
        <role>Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Martin Desruisseaux</name>
      <id>desruisseaux</id>
      <email>martin.desruisseaux@geomatys.fr</email>
      <organization>Geomatys</organization>
      <organizationUrl>http://www.geomatys.com/</organizationUrl>
      <timezone>+1</timezone>
      <roles>
        <role>Administrator</role>
        <role>Developer</role>
      </roles>
    </developer>
  </developers>



  <!-- ===========================================================
           Profiles that change the build process. We package the
           source code only when explicitly requested in order to
           make daily developer builds faster.
       =========================================================== -->
  <profiles>
    <profile>
      <id>sign-artifacts</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>package</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>



  <!-- ===========================================================
           Global properties.
       =========================================================== -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <website.encoding>UTF-8</website.encoding>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
    <ucar.repository.url>https://artifacts.unidata.ucar.edu/repository/unidata-releases</ucar.repository.url>

    <!-- associated projects dependencies -->
    <geoapi.version>4.0-SNAPSHOT</geoapi.version>
    <sis.version>2.0-SNAPSHOT</sis.version>
    <!--
    SIS build helper version froozen to official release.
    It ensures we can import it after SIS will migrate to Gradle build system.
    -->
    <sis.build.helper.version>1.3</sis.build.helper.version>
    <sis.non-free.version>1.3</sis.non-free.version>

    <!-- third party dependencies versions -->
    <esri.geometry>2.2.4</esri.geometry>
    <batik.version>1.14</batik.version>
    <commons-beanutils.version>1.9.4</commons-beanutils.version>
    <commons-compress.version>1.22</commons-compress.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <commons-logging.version>1.2</commons-logging.version>
    <jasperreports.version>6.18.1</jasperreports.version>
    <jaxen.version>1.1.2</jaxen.version>
    <java.version>17</java.version>
    <lucene.version>8.4.0</lucene.version>
    <marineapi.version>0.11.0</marineapi.version>
    <nashorn.version>15.3</nashorn.version>
    <netty3.version>3.9.4.Final</netty3.version> <!-- Can not upgrade to 3.10.6 because it breaks Geotk build. -->
    <postgis.version>2.3.0</postgis.version>
    <quartz.version>2.3.1</quartz.version>
    <woodstox.version>6.0.0</woodstox.version>
    <!-- ErrorProne 2.11.0 has a knwon bug on JDK-17 : https://giters.com/google/error-prone/issues/2926 -->
    <error-prone.version>2.10.0</error-prone.version>
    <!-- @{argLine} necessary for jacoco generation, we must declare
         an empty property to avoid a surefire exception if we run any other
         maven phase which doesn't activate jacoco -->
    <argLine></argLine>
  </properties>



  <!-- ===========================================================
           Dependency Management.
           If a POM declares one of those dependencies, then it
           will use the version specified here. Otherwise, those
           dependencies are ignored.

           Reference: http://search.maven.org/
       =========================================================== -->
  <dependencyManagement>
    <dependencies>
      <dependency>
          <groupId>org.opengis</groupId>
          <artifactId>geoapi-conformance</artifactId>
          <version>${geoapi.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.opengis</groupId>
         <artifactId>geoapi-pending</artifactId>
         <version>${geoapi.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-referencing</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-referencing-by-identifiers</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-metadata</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-utility</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.storage</groupId>
          <artifactId>sis-geotiff</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.storage</groupId>
          <artifactId>sis-earth-observation</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.storage</groupId>
          <artifactId>sis-storage</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.storage</groupId>
          <artifactId>sis-netcdf</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.profiles</groupId>
          <artifactId>sis-french-profile</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.non-free</groupId>
          <artifactId>sis-embedded-data</artifactId>
          <version>${sis.non-free.version}</version>
          <exclusions>
              <exclusion>
                  <groupId>org.apache.sis.core</groupId>
                  <artifactId>sis-referencing</artifactId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.apache.sis.non-free</groupId>
          <artifactId>sis-epsg</artifactId>
          <version>${sis.non-free.version}</version>
          <exclusions>
              <exclusion>
                  <groupId>org.apache.sis.core</groupId>
                  <artifactId>sis-referencing</artifactId>
              </exclusion>
          </exclusions>
      </dependency>

      <!-- Geometries -->
      <dependency>
        <groupId>com.esri.geometry</groupId>
        <artifactId>esri-geometry-api</artifactId>
        <version>${esri.geometry}</version>
      </dependency>

      <!-- Miscellaneous utilities -->
      <dependency>
        <groupId>commons-beanutils</groupId> <!-- @todo see excludes in sub-modules. -->
        <artifactId>commons-beanutils</artifactId>
        <version>${commons-beanutils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
          <version>${netty3.version}</version>
      </dependency>

      <!-- XML -->
      <dependency>
        <groupId>com.fasterxml.woodstox</groupId>
        <artifactId>woodstox-core</artifactId>
        <version>${woodstox.version}</version>
      </dependency>
      <dependency>
        <groupId>jaxen</groupId>
        <artifactId>jaxen-limited</artifactId> <!-- Jaxen limited for xpath support -->
        <version>${jaxen.version}</version>
      </dependency>

      <!-- Logging -->
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>

      <!-- Database and Server -->
      <dependency>
        <groupId>net.postgis</groupId>
        <artifactId>postgis-jdbc</artifactId>
        <version>${postgis.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>${commons-dbcp.version}</version>
      </dependency>

      <!-- Lucene -->
      <dependency>
         <groupId>org.apache.lucene</groupId>
         <artifactId>lucene-analyzers-common</artifactId>
         <version>${lucene.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.lucene</groupId>
         <artifactId>lucene-queryparser</artifactId>
         <version>${lucene.version}</version>
      </dependency>

      <!-- Batik SVG -->
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-transcoder</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-svggen</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-codec</artifactId>
        <version>${batik.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-script</artifactId>
        <version>${batik.version}</version>
      </dependency>

      <!-- Jasper report -->
      <dependency>
        <groupId>net.sf.jasperreports</groupId>
        <artifactId>jasperreports</artifactId>
        <version>${jasperreports.version}</version>
      </dependency>

      <!-- JavaScript -->
      <dependency>
        <groupId>org.openjdk.nashorn</groupId>
        <artifactId>nashorn-core</artifactId>
        <version>${nashorn.version}</version>
      </dependency>

      <!-- Data sources -->
      <dependency>
        <groupId>net.sf.marineapi</groupId>
        <artifactId>marineapi</artifactId>
        <version>${marineapi.version}</version>
      </dependency>

      <!-- self modules -->
      <dependency><groupId>org.geotoolkit</groupId><artifactId>geotk-feature</artifactId><version>${project.version}</version></dependency>
      <dependency><groupId>org.geotoolkit</groupId><artifactId>geotk-utility</artifactId><version>${project.version}</version><type>test-jar</type></dependency>
      <dependency><groupId>org.geotoolkit</groupId><artifactId>geotk-xml-tms</artifactId><version>${project.version}</version></dependency>

      <!--
      Dependency resolution override needed to pass dependency convergence.
      Please check regularly if these rules are still needed.
      -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>4.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>



  <!-- ===========================================================
           Dependencies to be inherited by all modules.
       =========================================================== -->
  <dependencies>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.opengis</groupId>
      <artifactId>geoapi-conformance</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Force database drivers in tests for all modules -->
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbytools</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>



  <!-- ===========================================================
           Build management.

           Reference: http://maven.apache.org/plugins/
       =========================================================== -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <groupId>com.agilejava.docbkx</groupId>
          <artifactId>docbkx-maven-plugin</artifactId>
          <version>2.0.14</version>
        </plugin>
      </plugins>
    </pluginManagement>



    <plugins>

      <!-- Compile properties files into resources UTF files. -->
      <plugin>
        <groupId>org.apache.sis.core</groupId>
        <artifactId>sis-build-helper</artifactId>
        <version>${sis.build.helper.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>compile-resources</goal>
              <goal>collect-jars</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <argLine>
             <!-- @{argLine} necessary for jacoco generation, because we added more parameters -->
             @{argLine}
          </argLine>
          <systemProperties>
            <property>
              <name>derby.stream.error.file</name>
              <value>${project.build.directory}/derby.log</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>

      <!-- JDK requirement for building (not necessarily for running) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>${java.version}</version>
                </requireJavaVersion>
                <dependencyConvergence/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- =======================================================
               Compile Java source files
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>       <!-- The -source argument for the Java compiler.   -->
          <target>${java.version}</target>       <!-- The -target argument for the Java compiler.   -->
          <release>${java.version}</release>
          <debug>true</debug>        <!-- Whether to include debugging information.     -->
          <optimize>false</optimize> <!-- Whether to optimize the compiled code.        -->
          <encoding>${project.build.sourceEncoding}</encoding>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <useIncrementalCompilation>false</useIncrementalCompilation> <!-- https://jira.codehaus.org/browse/MCOMPILER-209 -->
          <compilerArgs>
            <arg>-XDcompilePolicy=simple</arg>
            <!-- UnicodeInCode : do not consider unicode chars in code as an error, used in maths and projections -->
            <!-- TODO : when upgrading ErrorProne to 2.11+ add -Xep:UnicodeInCode:WARN -->
            <arg>-Xplugin:ErrorProne</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${error-prone.version}</version>
            </path>
            <!-- Other annotation processors go here.

            If 'annotationProcessorPaths' is set, processors will no longer be
            discovered on the regular -classpath; see also 'Using Error Prone
            together with other annotation processors' below. -->
          </annotationProcessorPaths>
        </configuration>
      </plugin>



      <!-- =======================================================
               Copy resource files
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>utf</nonFilteredFileExtension>
            <nonFilteredFileExtension>tif</nonFilteredFileExtension>
            <nonFilteredFileExtension>tiff</nonFilteredFileExtension>
            <nonFilteredFileExtension>serialized</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>



      <!-- =======================================================
               JAR packaging
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Built-On>${maven.build.timestamp}</Built-On>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>



      <!-- =======================================================
               Remove previous snapshots from the local repository
           ======================================================= -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>remove-old-artifacts</id>
            <goals>
              <goal>remove-project-artifact</goal>
            </goals>
            <configuration>
              <removeAll>false</removeAll>      <!-- Remove only snapshots of this project version. -->
            </configuration>
          </execution>
        </executions>
      </plugin>



  <!-- ==============================================================
         Checkstype configuration.

         Legal note: Checkstyle is under LGPL license, but it is okay
         to use it only for the build (not included in distribution).
       ============================================================== -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <!--
        TODO: remove dependency override once maven plugin import a newer version.
        We need at least CheckStyle 9.3 to support JDK 17 new features like instanceof+cast shortcut.
        -->
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>9.3</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>             <!-- When skipping tests, skip also checkstyle verification. -->
              <encoding>${project.build.sourceEncoding}</encoding>
              <consoleOutput>true</consoleOutput>
              <checkstyleRules>
                <module name="Checker">
                  <module name="BeforeExecutionExclusionFileFilter">
                    <property name="fileNamePattern" value="[\\/]generated-sources[\\/]"/>
                  </module>
                  <!--
                    Whether whitespaces should be present before or after various kind of tokens,
                    and where line wraps are allowed or mandated.
                  -->
                  <module name="FileTabCharacter"/>                 <!-- No tab characters in the file. -->
                  <module name="NewlineAtEndOfFile"/>               <!-- Newline at the end of each file. -->
                  <module name="UniqueProperties"/>                 <!-- No duplicated keys in *.properties files. -->
                  <module name="TreeWalker">
                    <module name="NoLineWrap"/>                     <!-- Imports and package statements are not line-wrapped. -->
                    <module name="RegexpSinglelineJava">
                      <property name="format" value="\s+$"/>
                      <property name="message" value="Trailing spaces not allowed."/>
                    </module>
                  </module>
                </module>
              </checkstyleRules>
            </configuration>
          </execution>
        </executions>
      </plugin>



      <!-- ====================================================
             Build XHTML pages from the Docbook files.
             Can also be run from the command line as:

             mvn -N docbkx:generate-xhtml
           ==================================================== -->
      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <inherited>false</inherited>
        <dependencies>
          <dependency> <!-- XHTML generation -->
            <groupId>net.sf.docbook</groupId>
            <artifactId>docbook-xml</artifactId>
            <version>5.0-all</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>runtime</scope>
          </dependency>
          <dependency> <!-- Syntax highlighting -->
            <groupId>net.sf.xslthl</groupId>
            <artifactId>xslthl</artifactId>
            <version>2.0.2</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
        <configuration>
          <sourceDirectory>${basedir}/src/main/docbook</sourceDirectory>
          <targetDirectory>${basedir}/target/site/book</targetDirectory>
          <xhtmlCustomization>src/main/docbook/book.xsl</xhtmlCustomization>
          <xincludeSupported>true</xincludeSupported>
          <htmlStylesheet>book.css</htmlStylesheet>
          <highlightSource>true</highlightSource>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate-xhtml</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
      </plugin>



      <!-- =======================================================
               Build the web site
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <locales>en</locales>
          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
          <outputEncoding>${website.encoding}</outputEncoding>
        </configuration>
      </plugin>

      <!-- =======================================================
               JgitFlow configuration
           ======================================================= -->
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m4.3</version>
        <configuration>
          <flowInitContext>
            <masterBranchName>master</masterBranchName>
            <developBranchName>develop</developBranchName>
            <featureBranchPrefix>feature-</featureBranchPrefix>
            <releaseBranchPrefix>release-</releaseBranchPrefix>
            <hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
          </flowInitContext>
        </configuration>
      </plugin>

      <!-- =======================================================
               Build the Javadoc to be published on the web site
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <docencoding>${website.encoding}</docencoding>
          <charset>${website.encoding}</charset>
          <source>${java.source}</source>             <!-- Enables javadoc to handle assertions present in J2SE 1.4.  -->
          <locale>en</locale>              <!-- Locale that javadoc uses when generating documentation.    -->
          <noqualifier>all</noqualifier>   <!-- Omit qualifying package name before class names in output. -->
          <aggregate>true</aggregate>      <!-- Build an aggregated report at the root.                    -->
          <maxmemory>2G</maxmemory>        <!-- maximum Java heap size to be used when launching the tool. -->
          <quiet>true</quiet>              <!-- Shuts off non-error and non-warning messages.              -->
          <keywords>true</keywords>        <!-- Adds HTML meta keyword tags to the generated files.        -->
          <breakiterator>true</breakiterator>
          <excludePackageNames>org.geotoolkit.cql:org.geotoolkit.build:org.geotoolkit.test:org.geotoolkit.maven:org.geotoolkit.internal:org.geotoolkit.resources:org.geotoolkit.legacy:org.apache:org.opengis:com</excludePackageNames>
          <!-- stylesheetfile>src/main/javadoc/stylesheet.css</stylesheetfile -->

          <!-- TODO : fix project javadoc -->
          <doclint>none</doclint>

          <!-- Creates links to existing javadoc-generated documentation of external referenced classes. -->
          <links>
            <!--link>http://sis.apache.org/apidocs</link>-->
          </links>

          <!-- Enables the Javadoc tool to interpret a simple, one-argument
               custom block tag tagname in doc comments. Note: <placement />
               should be a combination of the letters Xaoptcmf. -->
          <tags>
            <tag><placement>t</placement> <name>goal</name>        <head>Maven goal:</head></tag>
            <tag><placement>t</placement> <name>phase</name>       <head>Maven phase:</head></tag>
            <tag><placement>t</placement> <name>description</name> <head>Description:</head></tag>
            <tag><placement>X</placement> <name>level</name>       <head>API level:</head></tag>
            <tag><placement>X</placement> <name>category</name>    <head>Category:</head></tag>
            <tag><placement>a</placement> <name>todo</name>        <head>TODO:</head></tag>
            <tag><placement>X</placement> <name>module</name>    <head>Module</head></tag>
            <tag><placement>X</placement> <name>preformat</name> <head>Code</head></tag>
          </tags>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <!-- TODO: remove version definition after Geotk/BOM upgrade. It will be inherited from parent. -->
        <version>0.8.9</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <!-- ==================================================================
           Repositories. This is where Maven looks for dependencies. The
           Maven repository is implicit and doesn't need to be specified.
       ================================================================== -->
  <repositories>
    <repository>
      <id>geotoolkit.org</id>
      <name>Geotoolkit.org repository</name>
      <url>https://maven.geotoolkit.org</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>geomatys</id>
      <name>Geomatys public repository</name>
      <url>https://nexus.geomatys.com/repository/maven-public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!-- this repository is retrieved transitively with the wrong protocol,
    as maven does not follow redirection we declare it here-->
    <repository>
      <id>jaspersoft</id>
      <name>jaspersoft repository</name>
      <url>https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>geotoolkit.org</id>
      <name>Geotoolkit.org repository</name>
      <url>https://maven.geotoolkit.org</url>
    </pluginRepository>
    <pluginRepository>
      <id>geomatys</id>
      <name>Geomatys public repository</name>
      <url>https://nexus.geomatys.com/repository/maven-public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>



  <!-- ====================================================
           Deployment to public servers
       ==================================================== -->
  <distributionManagement>
    <site>
      <id>geotoolkit</id>
      <name>Geotoolkit.org web site</name>
      <url>file:///var/www/www.geotoolkit.org</url>
    </site>
    <repository>
      <id>geotoolkit</id>
      <name>Geotoolkit.org binaries</name>
      <url>https://nexus.geomatys.com/repository/geotoolkit</url>
    </repository>
  </distributionManagement>



  <!-- ===========================================================
           Modules for the build in approximate dependency order
       =========================================================== -->
  <modules>
    <module>geotk-utility</module>
    <module>geotk-temporal</module>
    <module>geotk-maven-report</module>
    <module>geotk-utility-jdbc</module>
    <module>geotk-analytics</module>
    <module>geotk-nio-zipfs</module>

    <module>geotk-geometry</module>
    <module>geotk-jtswrapper</module>
    <module>geotk-feature</module>
    <module>geotk-image</module>
    <module>geotk-coverage</module>

    <module>geotk-index</module>
    <module>geotk-spatial-lucene</module>

    <module>geotk-processing-core</module>
    <module>geotk-processing</module>

    <module>geotk-style</module>
    <module>geotk-svg-batik</module>
    <module>geotk-svg-salamander</module>
    <module>geotk-render</module>
    <module>geotk-render2d</module>
    <module>geotk-jasperreport</module>

    <module>geotk-jaxp-core</module>
    <module>geotk-jaxp-gml</module>
    <module>geotk-jaxp-xsd</module>
    <module>geotk-jaxp-atom</module>
    <module>geotk-jaxp-xal</module>

    <module>geotk-xml-xsd</module>
    <module>geotk-xml-feature-catalogue</module>
    <!--module>geotk-xml-metadata-imagery</module-->
    <module>geotk-xml-gml</module>
    <module>geotk-xml-citygml</module>
    <module>geotk-xml-kml</module>
    <module>geotk-xml-dif</module>
    <module>geotk-xml-csw</module>
    <module>geotk-xml-observation</module>
    <module>geotk-xml-owc</module>
    <module>geotk-xml-ows</module>
    <module>geotk-xml-sensorML</module>
    <module>geotk-xml-ogc</module>
    <module>geotk-xml-ols</module>
    <module>geotk-xml-opensearch</module>
    <module>geotk-xml-se</module>
    <module>geotk-xml-sld</module>
    <module>geotk-xml-sos</module>
    <module>geotk-xml-swe</module>
    <module>geotk-xml-tms</module>
    <module>geotk-xml-wcs</module>
    <module>geotk-xml-wfs</module>
    <module>geotk-xml-wmc</module>
    <module>geotk-xml-wms</module>
    <module>geotk-xml-wmts</module>
    <module>geotk-xml-wps</module>
    <module>geotk-xml-ebrim</module>
    <module>geotk-xml-xacml</module>
    <module>geotk-xml-skos</module>
    <module>geotk-xml-mathml</module>
    <module>geotk-xml-providers</module>
    <module>geotk-xml-thw</module>
    <module>geotk-xml-sts</module>

    <module>geotk-storage</module>
    <module>geotk-feature-dbf</module>
    <module>geotk-feature-csv</module>
    <module>geotk-feature-gml</module>
    <module>geotk-feature-kml</module>
    <module>geotk-feature-shapefile</module>
    <module>geotk-feature-om</module>
    <module>geotk-feature-osm</module>
    <module>geotk-feature-geojson</module>
    <module>geotk-feature-mapinfo</module>
    <module>geotk-feature-nmea</module>
    <module>geotk-coverage-geotiff</module>
    <module>geotk-coverage-imagery</module>
    <!-- Obsolete module, still contains interesting things, salvage what we can before removing it -->
    <!--module>geotk-coverage-postgresql</module-->
    <module>geotk-coverage-xml</module>
    <module>geotk-coverage-sql</module>
    <module>geotk-coverage-wkb</module>
    <module>geotk-coverage-hgt</module>
    <module>geotk-coverage-vi3g</module>
    <module>geotk-observation-store</module>
    <module>geotk-metadata-store</module>
    <module>geotk-hdf</module>

    <module>geotk-client-store</module>
    <module>geotk-client-csw</module>
    <module>geotk-client-osm</module>
    <module>geotk-client-osmtms</module>
    <module>geotk-client-sos</module>
    <module>geotk-client-wcs</module>
    <module>geotk-client-wfs</module>
    <module>geotk-client-wms</module>
    <module>geotk-client-ncwms</module>
    <module>geotk-client-wmts</module>
    <module>geotk-client-wps</module>

    <module>benchmark</module>

    <module>geotk-demo-referencing-javadb</module>
    <module>geotk-demo-referencing-wkt</module>
    <module>geotk-demo-samples</module>

    <module>buildset</module>
  </modules>
</project>
