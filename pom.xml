<?xml version="1.0" encoding="UTF-8"?>
<!-- =======================================================================
        Maven Project Configuration File

        The Geotoolkit.org Project
            http://www.geotoolkit.org/

        Profiles available in this build:

          - package         Also package source code.
          - sign-artifacts  Apply GPG signature on the JAR files.
     ======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>



  <!-- ====================================================
           Project description (including license).
       ==================================================== -->
  <groupId>org.geotoolkit</groupId>
  <artifactId>geotoolkit</artifactId>
  <packaging>pom</packaging>
  <version>5.0-SNAPSHOT</version>
  <name>Geotoolkit.org</name>
  <url>http://www.geotoolkit.org/</url>

  <description>
    Geotoolkit.org (abridged Geotk) is a free software, Java language library for developing
    geospatial applications. The library can be used for desktop or server applications.
    The library is built on top of Apache SIS, and is used as a laboratory for the later:
    some features are first developed in Geotk, then the most stable parts are submitted
    to Apache SIS.
  </description>

  <organization>
    <name>Geotoolkit.org</name>
    <url>http://www.geotoolkit.org/</url>
  </organization>
  <inceptionYear>2009</inceptionYear>

  <licenses>
    <license>
      <name>Lesser General Public License (LGPL)</name>
      <url>http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>



  <!-- ===========================================================
           Issue managements and mailing lists.
       =========================================================== -->
  <scm>
    <connection>scm:git:https://github.com/Geomatys/geotoolkit.git</connection>
    <url>https://github.com/Geomatys/geotoolkit.git</url>
    <developerConnection>scm:git:https://github.com/Geomatys/geotoolkit.git</developerConnection>
  </scm>

  <issueManagement>
    <system>JIRA</system>
    <url>http://jira.geotoolkit.org/</url>
  </issueManagement>

  <mailingLists>
    <mailingList>
      <name>geotoolkit</name>
      <subscribe>http://lists.osgeo.org/mailman/listinfo/geotoolkit</subscribe>
      <unsubscribe>http://lists.osgeo.org/mailman/listinfo/geotoolkit</unsubscribe>
      <post>geotoolkit@lists.osgeo.org</post>
      <archive>http://lists.osgeo.org/pipermail/geotoolkit</archive>
    </mailingList>
  </mailingLists>



  <!-- ===========================================================
           Developers and Contributors.
       =========================================================== -->
  <developers>
    <developer>
      <name>Johann Sorel</name>
      <id>eclesia</id>
      <email>johann.sorel@geomatys.com</email>
      <organization>Geomatys</organization>
      <organizationUrl>http://www.geomatys.fr/</organizationUrl>
      <timezone>+1</timezone>
      <roles>
        <role>Administrator</role>
        <role>Developer</role>
      </roles>
    </developer>
    <developer>
      <name>Martin Desruisseaux</name>
      <id>desruisseaux</id>
      <email>martin.desruisseaux@geomatys.fr</email>
      <organization>Geomatys</organization>
      <organizationUrl>http://www.geomatys.com/</organizationUrl>
      <timezone>+1</timezone>
      <roles>
        <role>Administrator</role>
        <role>Developer</role>
      </roles>
    </developer>
  </developers>



  <!-- ===========================================================
           Profiles that change the build process. We package the
           source code only when explicitly requested in order to
           make daily developer builds faster.
       =========================================================== -->
  <profiles>
    <profile>
      <id>JDK9</id>
      <activation>
        <jdk>[1.9,)</jdk>
      </activation>
      <properties>
        <sis.build.helper.version>${sis.version}</sis.build.helper.version>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <release>8</release>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>--add-modules java.xml.bind,java.xml.ws.annotation,javafx.graphics</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>sign-artifacts</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>package</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>



  <!-- ===========================================================
           Global properties.
       =========================================================== -->
  <properties>
    <geoapi.version>4.0-SNAPSHOT</geoapi.version> <!-- Must be same than the version used by SIS. -->
    <sis.version>dev-1.0-SNAPSHOT</sis.version>
    <sis.build.helper.version>0.8</sis.build.helper.version>
    <sis.epsg.version>1.0-M1</sis.epsg.version>
    <netcdf.version>4.3.21</netcdf.version>
    <lucene.version>5.4.1</lucene.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <website.encoding>UTF-8</website.encoding>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
  </properties>



  <!-- ===========================================================
           Dependency Management.
           If a POM declares one of those dependencies, then it
           will use the version specified here. Otherwise, those
           dependencies are ignored.

           Reference: http://search.maven.org/
       =========================================================== -->
  <dependencyManagement>
    <dependencies>
      <!-- Import all dependency management used by the GeAPI project.
           This include JUnit and units of measurement. -->
      <dependency>
        <groupId>org.opengis</groupId>
        <artifactId>geoapi-parent</artifactId>
        <version>${geoapi.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.sis</groupId>
        <artifactId>parent</artifactId>
        <version>${sis.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Apache SIS -->
      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-utility</artifactId>
          <version>${sis.version}</version>
      </dependency>
      <dependency>
          <groupId>org.opengis</groupId>
          <artifactId>geoapi-pending</artifactId>
          <version>${geoapi.version}</version>
      </dependency>
        <dependency>
          <groupId>org.opengis</groupId>
          <artifactId>geoapi-conformance</artifactId>
          <version>${geoapi.version}</version>
        </dependency>

      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-utility</artifactId>
          <version>${sis.version}</version>
          <type>test-jar</type>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-referencing</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-referencing</artifactId>
          <version>${sis.version}</version>
          <type>test-jar</type>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-metadata</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-metadata</artifactId>
          <version>${sis.version}</version>
          <type>test-jar</type>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.core</groupId>
          <artifactId>sis-feature</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.storage</groupId>
          <artifactId>sis-storage</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.storage</groupId>
          <artifactId>sis-netcdf</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.storage</groupId>
          <artifactId>sis-geotiff</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
          <groupId>org.apache.sis.profiles</groupId>
          <artifactId>sis-french-profile</artifactId>
          <version>${sis.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.media</groupId>
        <artifactId>jai_core</artifactId>
        <version>1.1.3</version>
      </dependency>
      <dependency>
        <groupId>javax.media</groupId>
        <artifactId>jai_codec</artifactId>
        <version>1.1.3</version>
      </dependency>
      <dependency>
        <groupId>javax.media</groupId>
        <artifactId>jai_imageio</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>com.jhlabs</groupId>
        <artifactId>filters</artifactId>
        <version>2.0.235</version>
      </dependency>

      <!-- Geometries -->
      <dependency>
        <groupId>org.locationtech.jts</groupId>
        <artifactId>jts-core</artifactId>
        <version>1.15.0</version>
        <exclusions>
          <exclusion>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Miscellaneous utilities -->
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>2.0.1</version>
      </dependency>
      <dependency>
        <groupId>commons-beanutils</groupId> <!-- @todo see excludes in sub-modules. -->
        <artifactId>commons-beanutils</artifactId>
        <version>1.8.3</version>
      </dependency>
      <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
          <version>3.9.4.Final</version>
      </dependency>

      <!-- XML -->
      <dependency>
        <groupId>org.jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>1.1.3</version>
      </dependency>
      <dependency>
        <groupId>xerces</groupId>  <!-- @todo - used only in JTS exclusion. Should we omit? -->
        <artifactId>xercesImpl</artifactId>
        <version>2.7.1</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.woodstox</groupId>
        <artifactId>woodstox-core</artifactId>
        <version>5.1.0</version>
      </dependency>
      <dependency>
        <groupId>jaxen</groupId>
        <artifactId>jaxen-limited</artifactId> <!-- Jaxen limited for xpath support -->
        <version>1.1.2</version>
      </dependency>

       <!-- JSON -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.6.4</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.6.4</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>2.6.4</version>
      </dependency>

      <!-- Web -->
      <dependency>
        <groupId>net.iharder</groupId> <!-- This dependency will be removed with JDK8. -->
        <artifactId>base64</artifactId>
        <version>2.3.8</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version> <!-- TODO: version mismatch with constellation. -->
      </dependency>
      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>3.1</version>
        <!-- Transitive dependencies: commons-codec 1.2 and commons-logging 1.0.4.
             Those two dependencies are overwritten with more recent versions in this pom.xml. -->
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.6</version>
      </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
      <!-- Logging -->
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.16</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.6.4</version> <!-- See comment for edu.ucar dependency. -->
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>1.6.4</version> <!-- See comment for edu.ucar dependency. -->
        <scope>runtime</scope> <!-- Should never be needed at compile time. -->
      </dependency>

      <!--
        NetCDF dependency. If the version is updated, remember to update also the link to javadoc
        later in this pom.xml file, the server/javadoc/links.html file, and the information below.
        Transitive dependencies relevant to Geotk (for dependencies convergence) are:

           slf4j                1.6.4
           commons-logging      1.1    (modified to 1.1.1 in Geotk distribution)
           commons-codec        1.3
           commons-httpclient   3.1
           jdom                 1.1

        Note that Geotk may use a different version of the NetCDF library than SIS, which cause
        the above-cited dependencies to be also different.
      -->
      <dependency>
        <groupId>edu.ucar</groupId>
        <artifactId>netcdf</artifactId>
        <version>${netcdf.version}</version>
      </dependency>
      <dependency>
        <groupId>edu.ucar</groupId>
        <artifactId>udunits</artifactId>
        <version>${netcdf.version}</version>
      </dependency>
      <dependency>
        <groupId>edu.ucar</groupId>
        <artifactId>opendap</artifactId>
        <version>${netcdf.version}</version>
      </dependency>
      <dependency>
        <groupId>edu.ucar</groupId>
        <artifactId>bufr</artifactId>
        <version>${netcdf.version}</version>
      </dependency>
      <dependency>
        <groupId>edu.ucar</groupId>
        <artifactId>grib</artifactId>
        <version>${netcdf.version}</version>
      </dependency>

      <!-- Database and Server -->
      <dependency>
        <groupId>net.postgis</groupId>
        <artifactId>postgis-jdbc</artifactId>
        <version>2.2.1</version>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>5.1.16</version>
      </dependency>
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4.5</version>
        <scope>provided</scope> <!-- Already included in JEE -->
      </dependency>

      <!-- GUI and application platform -->
      <dependency>
        <groupId>org.swinglabs</groupId>
        <artifactId>swingx</artifactId>
        <version>1.6.1</version>
      </dependency>
      <dependency>
        <groupId>org.swinglabs</groupId>
        <artifactId>swing-worker</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>org.swinglabs</groupId>
        <artifactId>jxlayer</artifactId>
        <version>3.0.4</version>
      </dependency>
      <dependency>
        <groupId>org.netbeans</groupId>
        <artifactId>wizard</artifactId>
        <version>0.998.1</version>
      </dependency>
      <dependency>
        <groupId>org.netbeans.api</groupId>
        <artifactId>org-netbeans-swing-outline</artifactId>
        <version>RELEASE802</version>
      </dependency>
      <dependency>
        <groupId>org.netbeans.api</groupId>
        <artifactId>org-openide-awt</artifactId>
        <version>RELEASE802</version>
      </dependency>
      <dependency>
        <groupId>org.netbeans.api</groupId>
        <artifactId>org-netbeans-api-visual</artifactId>
        <version>RELEASE802</version>
      </dependency>
      <dependency>
        <groupId>net.java.dev.timingframework</groupId>
        <artifactId>timingframework</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>jfree</groupId>
        <artifactId>jfreechart</artifactId>
        <version>1.0.13</version>
      </dependency>
      <dependency>
        <groupId>com.sun</groupId>
        <artifactId>jlfgr</artifactId>
        <version>1.0</version>
        <scope>runtime</scope>
      </dependency>

      <!-- latest jaxb version, there are bugs in the jdk7 jaxb version with particule group lists-->
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>2.2.7</version>
      </dependency>

      <!-- Lucene -->
      <dependency>
         <groupId>org.apache.lucene</groupId>
         <artifactId>lucene-analyzers-common</artifactId>
         <version>${lucene.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.lucene</groupId>
         <artifactId>lucene-queryparser</artifactId>
         <version>${lucene.version}</version>
      </dependency>

      <!-- Batik SVG -->
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-transcoder</artifactId>
        <version>1.8</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-svggen</artifactId>
        <version>1.8</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-codec</artifactId>
        <version>1.8</version>
      </dependency>

      <!-- Jasper report -->
      <dependency>
        <groupId>net.sf.jasperreports</groupId>
        <artifactId>jasperreports</artifactId>
        <version>6.1.0</version>
      </dependency>

      <!-- Groovy -->
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>2.2.2</version>
      </dependency>

      <!-- YAML -->
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>1.13</version>
      </dependency>

      <!-- Data sources -->
      <dependency>
        <groupId>net.sf.marineapi</groupId>
        <artifactId>marineapi</artifactId>
        <version>0.9.0</version>
      </dependency>
      <dependency>
        <groupId>org.rxtx</groupId>
        <artifactId>rxtxcomm</artifactId>
        <version>2.2pre2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>



  <!-- ===========================================================
           Dependencies to be inherited by all modules.
       =========================================================== -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>



  <!-- ===========================================================
           Build management.

           Reference: http://maven.apache.org/plugins/
       =========================================================== -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>2.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>com.agilejava.docbkx</groupId>
          <artifactId>docbkx-maven-plugin</artifactId>
          <version>2.0.14</version>
        </plugin>
      </plugins>
    </pluginManagement>



    <plugins>
      <!-- =======================================================
               Compile Java source files
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>       <!-- The -source argument for the Java compiler.   -->
          <target>1.8</target>       <!-- The -target argument for the Java compiler.   -->
          <debug>true</debug>        <!-- Whether to include debugging information.     -->
          <optimize>false</optimize> <!-- Whether to optimize the compiled code.        -->
          <encoding>${project.build.sourceEncoding}</encoding>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <useIncrementalCompilation>false</useIncrementalCompilation> <!-- https://jira.codehaus.org/browse/MCOMPILER-209 -->
        </configuration>
      </plugin>



      <!-- =======================================================
               Copy resource files
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>utf</nonFilteredFileExtension>
            <nonFilteredFileExtension>tif</nonFilteredFileExtension>
            <nonFilteredFileExtension>tiff</nonFilteredFileExtension>
            <nonFilteredFileExtension>serialized</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>



      <!-- =======================================================
               JAR packaging
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <index>false</index>
            <!-- Note: A previous Geotk version set <index> to "true" in order to generate
                 the META-INF/INDEX.LIST file. However that index file has precedence over
                 the "Class-Path" entry in the META-INF/MANIFEST.MF file: the later class-
                 path is then totally ignored.   Unfortunately, for an unknown raison, the
                 INDEX.LIST file does not contain any GeoAPI-SNAPSHOT package declaration,
                 which cause java.lang.NoClassDefFoundError to be thrown at runtime.
                 Consequently we have to forget about INDEX.LIST for now. -->
            <manifest>
              <addClasspath>true</addClasspath>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Built-On>${maven.build.timestamp}</Built-On>
              <Implementation-URL>http://www.geotoolkit.org</Implementation-URL>
              <Specification-Title>GeoAPI</Specification-Title>
              <Specification-Version>${geoapi.version}</Specification-Version>
              <Specification-Vendor>Open Geospatial Consortium</Specification-Vendor>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>



      <!-- =======================================================
               Remove previous snapshots from the local repository
           ======================================================= -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>remove-old-artifacts</id>
            <goals>
              <goal>remove-project-artifact</goal>
            </goals>
            <configuration>
              <removeAll>false</removeAll> <!-- Remove only snapshots of this project version. -->
            </configuration>
          </execution>
        </executions>
      </plugin>



  <!-- ==============================================================
         Checkstype configuration.

         Legal note: Checkstyle is under LGPL license, but it is okay
         to use it only for the build (not included in distribution).
       ============================================================== -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>7.6.1</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>             <!-- When skipping tests, skip also checkstyle verification. -->
              <encoding>${project.build.sourceEncoding}</encoding>
              <consoleOutput>true</consoleOutput>
              <checkstyleRules>
                <module name="Checker">
                  <module name="BeforeExecutionExclusionFileFilter">
                    <property name="fileNamePattern" value="[\\/]generated-sources[\\/]"/>
                  </module>
                  <!--
                    Whether whitespaces should be present before or after various kind of tokens,
                    and where line wraps are allowed or mandated.
                  -->
                  <module name="FileTabCharacter"/>                 <!-- No tab characters in the file. -->
                  <module name="NewlineAtEndOfFile"/>               <!-- Newline at the end of each file. -->
                  <module name="UniqueProperties"/>                 <!-- No duplicated keys in *.properties files. -->
                  <module name="TreeWalker">
                    <module name="NoLineWrap"/>                     <!-- Imports and package statements are not line-wrapped. -->
                    <module name="RegexpSinglelineJava">
                      <property name="format" value="\s+$"/>
                      <property name="message" value="Trailing spaces not allowed."/>
                    </module>
                  </module>
                </module>
              </checkstyleRules>
            </configuration>
          </execution>
        </executions>
      </plugin>



      <!-- ====================================================
             Build XHTML pages from the Docbook files.
             Can also be run from the command line as:

             mvn -N docbkx:generate-xhtml
           ==================================================== -->
      <plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <inherited>false</inherited>
        <dependencies>
          <dependency> <!-- XHTML generation -->
            <groupId>net.sf.docbook</groupId>
            <artifactId>docbook-xml</artifactId>
            <version>5.0-all</version>
            <classifier>resources</classifier>
            <type>zip</type>
            <scope>runtime</scope>
          </dependency>
          <dependency> <!-- Syntax highlighting -->
            <groupId>net.sf.xslthl</groupId>
            <artifactId>xslthl</artifactId>
            <version>2.0.2</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
        <configuration>
          <sourceDirectory>${basedir}/src/main/docbook</sourceDirectory>
          <targetDirectory>${basedir}/target/site/book</targetDirectory>
          <xhtmlCustomization>src/main/docbook/book.xsl</xhtmlCustomization>
          <xincludeSupported>true</xincludeSupported>
          <htmlStylesheet>book.css</htmlStylesheet>
          <highlightSource>true</highlightSource>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate-xhtml</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
      </plugin>



      <!-- =======================================================
               Build the web site
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <locales>en</locales>
          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
          <outputEncoding>${website.encoding}</outputEncoding>
        </configuration>
      </plugin>

      <!-- =======================================================
               JgitFlow configuration
           ======================================================= -->
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m4.3</version>
        <configuration>
          <flowInitContext>
            <masterBranchName>master</masterBranchName>
            <developBranchName>develop</developBranchName>
            <featureBranchPrefix>feature-</featureBranchPrefix>
            <releaseBranchPrefix>release-</releaseBranchPrefix>
            <hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
          </flowInitContext>
        </configuration>
      </plugin>

      <!-- =======================================================
               Build the Javadoc to be published on the web site
           ======================================================= -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <docencoding>${website.encoding}</docencoding>
          <charset>${website.encoding}</charset>
          <source>1.8</source>             <!-- Enables javadoc to handle assertions present in J2SE 1.4.  -->
          <locale>en</locale>              <!-- Locale that javadoc uses when generating documentation.    -->
          <noqualifier>all</noqualifier>   <!-- Omit qualifying package name before class names in output. -->
          <aggregate>true</aggregate>      <!-- Build an aggregated report at the root.                    -->
          <maxmemory>2G</maxmemory>        <!-- maximum Java heap size to be used when launching the tool. -->
          <quiet>true</quiet>              <!-- Shuts off non-error and non-warning messages.              -->
          <keywords>true</keywords>        <!-- Adds HTML meta keyword tags to the generated files.        -->
          <breakiterator>true</breakiterator>
          <excludePackageNames>org.geotoolkit.build:org.geotoolkit.test:org.geotoolkit.maven:org.geotoolkit.openoffice:org.geotoolkit.internal:org.geotoolkit.resources:org.geotoolkit.legacy:org.apache:org.opengis:com</excludePackageNames>
          <!-- stylesheetfile>src/main/javadoc/stylesheet.css</stylesheetfile -->

          <!-- TODO : fix project javadoc -->
          <additionalparam>
            -Xdoclint:none        <!-- pending corrections through the whole codebase. -->
          </additionalparam>

          <!-- Custom taglets implemented in Java. -->
          <taglets>
            <taglet><tagletClass>org.apache.sis.internal.taglet.Module</tagletClass></taglet>
            <taglet><tagletClass>org.apache.sis.internal.taglet.Preformat</tagletClass></taglet>
          </taglets>
          <tagletArtifact>
            <groupId>org.apache.sis.core</groupId>
            <artifactId>sis-build-helper</artifactId>
            <version>${sis.build.helper.version}</version>
          </tagletArtifact>

          <!-- Creates links to existing javadoc-generated documentation of external referenced classes. -->
          <links>
            <link>http://docs.oracle.com/javase/7/docs/api</link>
            <link>http://www.geoapi.org/snapshot/pending</link>
            <link>http://sis.apache.org/apidocs</link>

            <link>http://download.java.net/media/jai/javadoc/1.1.3/jai-apidocs</link>
            <link>http://download.java.net/media/jai-imageio/javadoc/1.1</link>
            <link>http://download.java.net/media/java3d/javadoc/1.5.2</link>
            <link>http://jcip.net/annotations/doc</link>
            <link>http://www.unidata.ucar.edu/software/netcdf-java/v4.3/javadoc</link>
            <link>http://javadoc.geotoolkit.org/external/swingx</link>
            <link>http://jscience.org/api</link>
          </links>

          <!-- Enables the Javadoc tool to interpret a simple, one-argument
               custom block tag tagname in doc comments. Note: <placement />
               should be a combination of the letters Xaoptcmf. -->
          <tags>
            <tag><placement>t</placement> <name>goal</name>        <head>Maven goal:</head></tag>
            <tag><placement>t</placement> <name>phase</name>       <head>Maven phase:</head></tag>
            <tag><placement>t</placement> <name>description</name> <head>Description:</head></tag>
            <tag><placement>X</placement> <name>level</name>       <head>API level:</head></tag>
            <tag><placement>X</placement> <name>category</name>    <head>Category:</head></tag>
            <tag><placement>a</placement> <name>todo</name>        <head>TODO:</head></tag>
          </tags>
        </configuration>
      </plugin>

    </plugins>
  </build>


  <!-- ==================================================================
           Repositories. This is where Maven looks for dependencies. The
           Maven repository is implicit and doesn't need to be specified.
       ================================================================== -->
  <repositories>
    <repository>
      <id>geotoolkit.org</id>
      <name>Geotoolkit.org repository</name>
      <url>http://maven.geotoolkit.org</url>
    </repository>
    <repository>
      <id>geomatys</id>
      <name>Geomatys public repository</name>
      <url>http://nexus.geomatys.com/repository/maven-public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>unidata</id>
      <name>unidata</name>
      <url>http://artifacts.unidata.ucar.edu/content/repositories/unidata-releases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>geotoolkit.org</id>
      <name>Geotoolkit.org repository</name>
      <url>http://maven.geotoolkit.org</url>
    </pluginRepository>
    <pluginRepository>
      <id>geomatys</id>
      <name>Geomatys public repository</name>
      <url>http://nexus.geomatys.com/repository/maven-public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>



  <!-- ====================================================
           Deployment to public servers
       ==================================================== -->
  <distributionManagement>
    <site>
      <id>geotoolkit</id>
      <name>Geotoolkit.org web site</name>
      <url>file:///var/www/www.geotoolkit.org</url>
    </site>
    <repository>
      <id>geotoolkit</id>
      <name>Geotoolkit.org binaries</name>
      <url>https://nexus.geomatys.com/repository/geotoolkit</url>
    </repository>
  </distributionManagement>



  <!-- ===========================================================
           Modules for the build in approximate dependency order
       =========================================================== -->
  <modules>
    <module>build</module>
    <module>modules</module>
    <module>demos</module>
  </modules>
</project>
